<?xml version="1.0" encoding="utf-8"?>
<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  dataChange="buildActionMenu()">
	
	<s:states>
		<s:State name="normal" />            
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			
			import edu.isi.bmkeg.cosi.model.Investigation;
			import edu.isi.bmkeg.cosi.model.Question;
			import edu.isi.bmkeg.kefed.model.design.KefedModel;
			
			import mx.events.MenuEvent;
			
			import mx.controls.treeClasses.TreeListData;
			
			//
			// + Top [Add Inv ...]
			// +--+ Investigation [Delete Inv / Edit Inv / Add Ques]
			//    +--+ Question [Delete Ques / Edit Ques / Add Ques / Add Expt]
			//       +--+ Question [Delete Ques / Edit Ques / Add Ques / Add Expt]
			//       +--+ Experiment [Delete Expt / Edit Expt ]
			// 
			private static const ADD_INV_ITEM:Object = 
				{label: "Add Investigation...", icon: openDocIcon};
			
			private static const DELETE_INV_ITEM:Object = 
				{label: "Delete Investigation", icon: deleteIcon};

			private static const EDIT_INV_ITEM:Object =
				{label: "Edit Investigation...", icon: editIcon};

			private static const ADD_QUES_ITEM:Object = 
				{label: "Add Question...", icon: openDocIcon};

			private static const ADD_SUB_QUES_ITEM:Object = 
				{label: "Add Sub-Question...", icon: openDocIcon};
			
			private static const DELETE_QUES_ITEM:Object = 
				{label: "Delete Question", icon: deleteIcon};
			
			private static const EDIT_QUES_ITEM:Object =
				{label: "Edit Question...", icon: editIcon};

			private static const ADD_EXPT_ITEM:Object = 
				{label: "Add Experiment...", icon: openDocIcon};
			
			private static const DELETE_EXPT_ITEM:Object = 
				{label: "Delete Experiment", icon: deleteIcon};
			
			private static const EDIT_EXPT_ITEM:Object =
				{label: "Edit Experiment...", icon: editIcon};
			
			[Embed(source="/edu/isi/bmkeg/cosi/questionTree/view/icons/emblem-system-2.png")]
			private static const actionsMenuButtonIcon:Class;
			
			[Embed(source="/edu/isi/bmkeg/cosi/questionTree/view/icons/document-preview.png")]
			private static const openDocIcon:Class;
			
			[Embed(source="/edu/isi/bmkeg/cosi/questionTree/view/icons/edit-4.png")]
			private static const editIcon:Class;

			[Embed(source="/edu/isi/bmkeg/cosi/questionTree/view/icons/deleteIcon.jpg")]
			private static const deleteIcon:Class;

			[Bindable]
			public var actionsMenuProvider:Object = {
					label: "", 
					icon: actionsMenuButtonIcon,
					children: []
				};
			
			private var amuSet:Boolean = false;
			
			private function buildActionMenu():void
			{

				if( this.treeListData == null )
					return;
				
				if( this.treeListData.item is Investigation ) {
					
					this.actionsMenuProvider = {
						label: "", 
						icon: actionsMenuButtonIcon,
						children: [
							DELETE_INV_ITEM,
							EDIT_INV_ITEM,
							ADD_QUES_ITEM 
						]
					};
					
				}
				else if( this.treeListData.item is Question ) {
					
					this.actionsMenuProvider = {
						label: "", icon: 
						actionsMenuButtonIcon,
						children: [
							DELETE_QUES_ITEM,
							EDIT_QUES_ITEM,
							ADD_SUB_QUES_ITEM, 
							ADD_EXPT_ITEM 
						]
					};
					
				}
				else if( this.treeListData.item is KefedModel ) {
					
					this.actionsMenuProvider = {
						label: "", 
						icon: actionsMenuButtonIcon,
						children: [
							DELETE_EXPT_ITEM,
							EDIT_EXPT_ITEM 
						]
					};
					
				} else {
					
					this.actionsMenuProvider = {
						label: "", icon: actionsMenuButtonIcon ,children: [
							ADD_INV_ITEM
						]
					};
					
				}
								
			}
						
			private function actionsMenuButton_itemClickHandler(event:MenuEvent):void
			{
				if (event.item == ADD_INV_ITEM) {
				
				} 
				else if (event.item == DELETE_INV_ITEM) {
					
				}
				else if (event.item == EDIT_INV_ITEM) {
					
				}
				else if (event.item == ADD_QUES_ITEM) {
					
				}
				else if (event.item == ADD_SUB_QUES_ITEM) {
					
				}
				else if (event.item == DELETE_QUES_ITEM) {
					
				}
				else if (event.item == EDIT_QUES_ITEM) {
					
				}
				else if (event.item == ADD_EXPT_ITEM) {
					
				}
				else if (event.item == DELETE_EXPT_ITEM) {
					
				}
				else if (event.item == EDIT_EXPT_ITEM) {
					
				}
			}
			
			
		]]>
	</fx:Script>
	
	<s:HGroup left="0" right="0" top="0" bottom="0" verticalAlign="middle">
		<s:Rect id="indentationSpacer" width="{treeListData.indent}" percentHeight="100" alpha="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		<s:Group id="disclosureGroup">
			<s:BitmapImage source="{treeListData.disclosureIcon}" visible="{treeListData.hasChildren}" />
		</s:Group>
		<s:BitmapImage source="{treeListData.icon}" />
		<s:Label id="labelField" text="{treeListData.item.vpdmfLabel}" paddingTop="2"/>
		<mx:MenuBar id="actionsMenuButton"  
					dataProvider="{actionsMenuProvider}" 
					leading="0"
					width="40" 
					height="20" 
					textAlign="left" 
					textIndent="0"
 				    itemClick="actionsMenuButton_itemClickHandler(event)"
					/>
	</s:HGroup>
</s:MXTreeItemRenderer>
