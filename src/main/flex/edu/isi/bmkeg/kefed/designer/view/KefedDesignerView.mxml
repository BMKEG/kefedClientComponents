<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:base="edu.isi.bmkeg.kefedDesigner.*"
		 xmlns:view="edu.isi.bmkeg.kefedDesigner.view.*"
		 xmlns:diagBase="edu.isi.bmkeg.kefed.diagram.*"
		 xmlns:diagView="edu.isi.bmkeg.kefed.diagram.view.*"
		 xmlns:ooevv="edu.isi.bmkeg.ooevv.editor.view.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="400" height="300">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import edu.isi.bmkeg.kefed.events.*;
			import edu.isi.bmkeg.kefed.model.design.KefedModel;
			import edu.isi.bmkeg.kefed.model.design.KefedModelElement;
			import edu.isi.bmkeg.kefed.designer.view.popups.*;
			import edu.isi.bmkeg.kefed.designer.events.elementLevel.SelectKefedElementEvent;
			
			import mx.managers.PopUpManager;
			
			import spark.events.ListEvent;
			
			[Bindable]
			public var model:KefedModel;
			
			private function cancelSave(event:MouseEvent):void {
			}
			
			private function doSave(event:MouseEvent, exit:Boolean):void {
			}
			
/*			private function handleObjectSelectedInGrid(event:MouseEvent):void {
				var i:int = objectsGrid.selectedIndex;
				var k:KefedModelElement = KefedModelElement(model.elements.getItemAt(i));
				this.dispatchEvent(new SelectKefedElementEvent(k.uuid));
			}*/
			
			private function handleObjectDoubleClickInGrid(event:MouseEvent):void {
			}
			
			private function handleLinkSelectedInGrid(event:ListEvent):void {
			}
			
			private function objectsGridCompleted(event:Event):void {
			}
			
			private function traceEvent(event:Event):void {
				trace("Event ",event);
			}
			
			private function ooevvElementTypeLabelFunktion(item:Object, thisObject:Object):String {
				var k:KefedModelElement = KefedModelElement(item); 
				var p:RegExp = /Instance/;
				return k.elementType.replace(p,"");
			}
			
			private function ooevvElementLabelFunktion(item:Object, thisObject:Object):String {
				var k:KefedModelElement = KefedModelElement(item); 
				if( k.defn != null && k.defn != null) {
					return k.defn.termValue;
				} else {
					return "";
				}
			}
			
			protected function renameButton_clickHandler(event:MouseEvent):void {
				var popup:KefedModelPopup = PopUpManager.createPopUp(this, KefedModelPopup, true) as KefedModelPopup;			
				PopUpManager.centerPopUp(popup);
				popup.p = this;
			}
			
			protected function loadButton_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new ActivateKefedModelListPopupEvent() );
				
			}
			
			protected function saveButton_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new SaveCompleteKefedModelEvent(this.model) );
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="Model"/>
		<s:State name="MaterialEntity"/>
		<s:State name="Process"/>
		<s:State name="ProcessPoint"/>
		<s:State name="Constant"/>
		<s:State name="Parameter"/>
		<s:State name="Measurement"/>
	</s:states>
	
	<mx:HDividedBox width="100%" height="100%">

		<s:Panel id="editorPanel" 
				 width="70%" height="100%" 
				 title="KEfED Model Editor: {model.exptId}" 
				 skinClass="edu.isi.bmkeg.kefed.diagram.view.KefedDiagramModuleSkin">
		
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			
			<diagView:KefedDiagramModule width="100%" height="100%"/>
			
			<mx:HBox width="100%" height="30" verticalAlign="middle" >
				<mx:Button id="renameButton" label="Rename..." click="renameButton_clickHandler(event)" /> 
				<mx:Button id="loadButton" label="Load" click="loadButton_clickHandler(event)" /> 
				<mx:Button id="saveButton" label="Save"  click="saveButton_clickHandler(event)" /> 
			</mx:HBox>
				
		</s:Panel>
		
		<s:Group id="modelDetails" width="30%" height="100%" >
			
			<ooevv:OoevvElementCatalog id="ooevvCat" width="100%" height="100%" />
			
		</s:Group>
	</mx:HDividedBox>
	
</s:Group>
