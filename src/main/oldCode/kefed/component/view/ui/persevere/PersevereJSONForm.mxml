<?xml version="1.0" encoding="utf-8"?>
<!-- $Id: PersevereJSONForm.mxml 2490 2011-06-15 23:55:41Z tom $ 
     $Date: 2011-06-15 16:55:41 -0700 (Wed, 15 Jun 2011) $
     $Revision: 2490 $ -->
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" 
		preinitialize="preinit();"
		width="100%" height="100%">
		
	<mx:Script>
    <![CDATA[
		import edu.isi.bmkeg.kefed.component.KefedComponent;
		import edu.isi.bmkeg.kefed.component.view.elements.KefedExperiment;
		import edu.isi.bmkeg.kefed.component.view.elements.KefedModel;
		import edu.isi.bmkeg.kefed.component.view.elements.KefedObject;
		import edu.isi.bmkeg.kefed.component.view.store.DataStoreEvent;
		import edu.isi.bmkeg.kefed.component.view.store.IDataStore;
		import edu.isi.bmkeg.kefed.component.view.store.IModelStore;
		import edu.isi.bmkeg.kefed.component.view.store.ModelStoreEvent;
		import edu.isi.bmkeg.kefed.component.view.store.json.JSONSerializer;
		import edu.isi.bmkeg.kefed.component.view.ui.UiUtil;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.FlexGlobals;
		import mx.rpc.events.FaultEvent;

		[Bindable]
		private var jsonCode:String = "";

		[Bindable]
		public var myObject:KefedObject;

		[Bindable]
		public var model:KefedModel = new KefedModel();

		[Bindable]
		public var templateList:ArrayCollection = new ArrayCollection();

		[Bindable]
		public var dataTable:ArrayCollection;

		[Bindable]
		public var modelStore:IModelStore;
		
		[Bindable]
		public var dataStore:IDataStore;
		
		[Bindable]
		private var messageText:String="";
		
		private var toInsert:int = 0;
		private var inserted:int = 0;
		private var toAdd:int = 0;
		private var added:int = 0;

        public function preinit():void {
        	modelStore.addEventListener(ModelStoreEvent.INSERT, handleInsert);
        	modelStore.addEventListener(ModelStoreEvent.SAVE, handleSave);
//        	modelStore.addEventListener(ModelStoreEvent.LIST, handleListModel);
        	modelStore.addEventListener(FaultEvent.FAULT, callError);
        	
        	dataStore.addEventListener(DataStoreEvent.INSERT, handleInsert);
        	dataStore.addEventListener(DataStoreEvent.SAVE, handleSave);
        	dataStore.addEventListener(FaultEvent.FAULT, callError);
        	
        	modelStore.listModels();
        }
        
        private function getModels(source:String):ArrayCollection {
 			var models:ArrayCollection = new ArrayCollection();
	    	for each (var o:Object in JSONSerializer.deserializeJsonList(source)) {
	    		if (o._type == "KefedExperiment") {
	    			models.addItem(JSONSerializer.deserializeKefedExperimentFromObject(o));
	    		} else if (o._type == "KefedModel" || o._type == null) {
	    			models.addItem(JSONSerializer.deserializeKefedModelFromObject(o));
	    		} else {
	    			trace("Unknown object ", o);
	    			Alert.show("Don't know how to handle object " + o.toString(), "Error");
	    		}
	    	}
	    	return models;
        }
    
	    private function checkCurrentModel():void {
	    	var models:ArrayCollection = getModels(codeBox.text);
	    	messageText = models.length + " model(s)";
			Alert.show(models.length + " " + models.toString());	
	    }
	    
	    private function insertOneModel(model:Object):void {
	    	if (model is KefedExperiment) {
				dataStore.insertData(model as KefedExperiment);
			} else if (model is KefedModel) {
				modelStore.insertModel(model as KefedModel);
			}
	    }
	    	    
		private function insertModel():void {
			var models:ArrayCollection = getModels(codeBox.text);
			toInsert = models.length;
			inserted = 0;
			for each (var model:Object in models) {
				insertOneModel(model);
			}
		}

		private function handleInsert(e:Event):void {
			inserted++;
			trace("Inserted #", inserted, e.toString());
			messageText = "Inserted " + inserted + " of " + toInsert + " model(s)";
//			Alert.show(e.toString());
		}
		
		private function saveOneModel(model:Object):void {
			if (model is KefedExperiment) {
				dataStore.saveData(model as KefedExperiment);
			} else if (model is KefedModel) {
				modelStore.saveModel(model as KefedModel);
			}
		}
	
		private function saveModel():void {
			var models:ArrayCollection = getModels(codeBox.text);
			toAdd = models.length;
			added = 0;
			for each (var model:Object in models) {
				saveOneModel(model);
			}
		}

		private function handleSave(e:Event):void {
			added++;
			trace("Saved #", added, e.toString());
			messageText = "Saved " + added + " of " + toAdd + " model(s)";
			// Alert.show(e.toString());							
		}
	
		private function callError(e:FaultEvent):void {
			trace("Error",UiUtil.getFaultURL(e) + " " + e.message.toString());
			messageText = "Error " + UiUtil.getFaultURL(e) + " " + e.message.toString();
//			Alert.show(UiUtil.getFaultURL(event) + "\n" + e.message.toString(), "Error");

		}
	    
	    private function cancel():void {
			var kefedComp:KefedComponent = KefedComponent(FlexGlobals.topLevelApplication.kefedComponent);
			kefedComp.currentState = "Dashboard_State";				
		}
	    
	    
//		private function handleListModel(event:ModelStoreEvent):void {
//				
//			templateList = new ArrayCollection();
//
//			templateList.addItem("Template"); 				
//			
//			for(var i:int=0; i<event.modelList.length; i++) {
//				var modelName:String = event.modelList[i].modelName;
//				if(modelName != null && modelName.length > 0) {
//					templateList.addItem(modelName);
//				}
//			}
//			
//			selectType.data = templateList;
//			selectType.selectedItem = "Template";
//			
//		}
	    
	    
    ]]>
    </mx:Script>

	<mx:FormHeading label="Generic Persevere Interface"/>
	<mx:FormItem direction="horizontal" height="100%" width="100%">
		<mx:TextArea id="codeBox" text="{this.jsonCode}" height="100%" width="100%"
			valueCommit="messageText = '';"  /> 
	</mx:FormItem>
	<mx:FormItem>
		<mx:HBox>						
			<!-- Not sure why this is even here.  It wasn't doing anything.
			<mx:ComboBox id="selectType" dataProvider="{templateList}"/>		-->		
			<mx:Button id="checkButton" label="Check" click="checkCurrentModel();"/>
			<mx:Button id="insertButton" label="Insert" click="insertModel();"/>
			<mx:Button id="saveButton" label="Save" click="saveModel();"/>
			<mx:Button id="cancelButton" label="Cancel" click="cancel();"/>
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem>
		<mx:Label id="message" text="{messageText}"/>
	</mx:FormItem>

</mx:Form>
